<?phpfinal class Loader{    private $registry;    public function __construct($registry)    {        $this->registry = $registry;    }    public function controller($route, $data = array())    {        $parts = explode('/', str_replace('../', '', (string)$route));        while ($parts) {            $file = DIR_APPLICATION . '/controller/' . implode('/', $parts) . '.php';            $class = 'Controller' . preg_replace('/[^a-zA-Z0-9]/', '', implode('/', $parts));            if (is_readable($file)) {                require_once($file);                break;            } else {                $method = array_pop($parts);            }        }        $controller = new $class($this->registry);        if (!isset($method)) {            $method = 'index';        }        // Stop any magical methods being called        if (substr($method, 0, 2) == '__') {            return false;        }        $output = '';        if (is_callable(array($controller, $method))) {            $output = call_user_func(array($controller, $method), $data);        }        return $output;    }    public function model($model, $data = array())    {        $model = str_replace('../', '', (string)$model);        $file = DIR_APPLICATION . '/model/' . $model . '.php';        $class = 'Model' . preg_replace('/[^a-zA-Z0-9]/', '', $model);        if (is_readable($file)) {            require_once($file);            $this->registry->set('model_' . str_replace('/', '_', $model), new $class($this->registry));        } else {            trigger_error('Error: Could not load model ' . $file . '!');            exit();        }    }    public function view($template, $data = array())    {        $file = DIR_TEMPLATE . $template;        if (is_readable($file)) {            extract($data);            ob_start();            require_once($file);            $output = ob_get_contents();            ob_end_clean();        } else {            trigger_error('Error: Could not load template ' . $file . '!');            exit();        }        return $output;    }    public function helper($helper)    {        $file = DIR_SYSTEM . 'helper/' . str_replace('../', '', (string)$helper) . '.php';        if (file_exists($file)) {            include_once($file);        } else {            trigger_error('Error: Could not load helper ' . $file . '!');            exit();        }    }    public function config($config)    {        $this->registry->get('config')->load($config);    }    public function language($language)    {        return $this->registry->get('language')->load($language);    }}